[versions]
kotlin = "2.2.0"
dokka = "2.0.0"
maven-publish = "0.34.0"
serialization = "1.9.0"
coroutines = "1.10.2"

[libraries]
khttpclient = "work.socialhub:khttpclient:0.0.5"
ktor-core = "io.ktor:ktor-client-core:3.2.3"
datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.7.1-0.6.x-compat"
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
serialization-cbor = { module = "org.jetbrains.kotlinx:kotlinx-serialization-cbor", version.ref = "serialization" }
nexus-publish = "io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin:2.0.0"
maven-publish = { module = "com.vanniktech:gradle-maven-publish-plugin", version.ref = "maven-publish" }
dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
cryptography-bom = "dev.whyoleg.cryptography:cryptography-bom:0.5.0"
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core" }
cryptography-openssl = { module = "dev.whyoleg.cryptography:cryptography-provider-openssl3-prebuilt" }
cryptography-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk" }
slf4j-simple = "org.slf4j:slf4j-simple:2.0.17"

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
maven-publish = { id = "com.vanniktech.maven.publish", version.ref = "maven-publish" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
swiftpackage = "io.github.luca992.multiplatform-swiftpackage:2.2.4"
git-versioning = "me.qoomon.git-versioning:6.4.4"
